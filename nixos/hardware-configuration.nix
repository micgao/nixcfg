# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "usbhid" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "none";
      fsType = "tmpfs";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/7FB5-5D91";
      fsType = "vfat";
    };

  fileSystems."/nix" =
    {
      device = "/dev/disk/by-uuid/3e194eb8-8749-4491-9694-7dfbb87766f6";
      fsType = "btrfs";
      options = [ "subvol=nix" "noatime" "compress=zstd" ];
    };

  fileSystems."/etc" =
    {
      device = "/dev/disk/by-uuid/3e194eb8-8749-4491-9694-7dfbb87766f6";
      fsType = "btrfs";
      options = [ "subvol=etc" "noatime" "compress=zstd" ];
    };

  fileSystems."/var/log" =
    {
      device = "/dev/disk/by-uuid/3e194eb8-8749-4491-9694-7dfbb87766f6";
      fsType = "btrfs";
      options = [ "subvol=log" "noatime" "compress=zstd" ];
    };

  fileSystems."/root" =
    {
      device = "/dev/disk/by-uuid/3e194eb8-8749-4491-9694-7dfbb87766f6";
      fsType = "btrfs";
      options = [ "subvol=root" "noatime" "compress=zstd" ];
    };

  fileSystems."/home" =
    {
      device = "/dev/disk/by-uuid/5649b32b-4b0c-40f6-b256-7a5723204fb9";
      fsType = "btrfs";
      options = [ "subvol=home" "noatime" ];
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/01e6033f-0502-49ea-8211-e833414b4a78"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
